@using Website.Components.Layout
@inject HttpClient Http
@inject NavigationManager NavManager
@page "/asa" 
@layout MainLayout
@rendermode InteractiveServer

ASA page!

@foreach (string url in urls){
    @if (isLoading)
    {
        <p>Loading image...</p>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <p style="color:red">@errorMessage</p>
    }
    else if (!string.IsNullOrEmpty(url))
    {
        <img src="@url" alt="Loaded Image" style="max-width:100%; height:auto;" />
    }
    else
    {
        <p>No image loaded.</p>
    }
}

@code {
    private List<int>? imageFiles;
    private List<string> urls = new List<string>();
    private bool isLoading = false;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        imageFiles = await Http.GetFromJsonAsync<List<int>>(NavManager.BaseUri +"Image/getEvent/ASA");

        try 
        {
            if (imageFiles is not null)    
            {
                isLoading = true;
                errorMessage = null;

                foreach (int image in imageFiles)
                {
                    var imageBytes = await Http.GetByteArrayAsync(NavManager.BaseUri + $"image/getImage/{image}");

                    // Convert the byte array to a base64 string
                    string base64String = Convert.ToBase64String(imageBytes);

                    // Set the image source
                    string imageUrl = $"data:image/jpeg;base64,{base64String}";

                    urls.Add(imageUrl);
                }
            }
            
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading image: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }        
    }
}
