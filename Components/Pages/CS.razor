@using Website.Components.Layout
@page "/cs" 
@layout MainLayout
@rendermode InteractiveServer
@inject HttpClient Http
@inject NavigationManager NavManager
@using Website.Components.Models;

<div class="flexCenterWrap CommonMargin">
    <div class="CommonSize">
        <div class="flexCenterWrap boxContainer bottom">
            <div class="boxsize">
                <h2>CS</h2>

                <h3>
                    All about my computer science endeavours! <br />
                    Click on a tile to learn more!
                </h3>
            </div>

            @if (projects is not null)
            {
                int i = 0;
                foreach (CsProject project in projects)
                {
                    <div class="boxsize" style="background-color: hsl(@hsl[i][0],  @hsl[i][1]%, @hsl[i][2]%, 1);" @onclick="()=> {overlay = true; selectedProject=project;}">
                        <h2>@project.Name</h2>
                    </div>
                    i++;
                }
            }
            else
            {
                <div>loading still...</div>
            }
        </div>
    </div>
</div>


@if (overlay && selectedProject is not null)
{
    <div class="overlayContainer" @onclick="() => overlay = false">
        <div class="overt CommonSize CommonMargin">
            <h2> @selectedProject.Name </h2>
            <h3>
                @selectedProject.Description  <br />
                @selectedProject.Link  <br />
            </h3>
            <button @onclick="() => overlay = false">Close</button>
        </div>
    </div>
}

@code {
    List<CsProject>? projects;
    Random randy = new Random();
    CsProject? selectedProject;

    List<List<int>> hsl = new List<List<int>>();

    bool overlay = false;

    protected override async Task OnInitializedAsync()
    {
        projects = await Http.GetFromJsonAsync<List<CsProject>>(NavManager.BaseUri + "CsProject");
    
         if (projects is not null){

            for (int i = 0; i < projects.Count; i++)
            {
                List<int> temp = new List<int>();
                temp.Add(randy.Next(0, 360));
                temp.Add(randy.Next(14, 22));
                temp.Add(randy.Next(88, 96));
                hsl.Add(temp);
            }
         }
    }
}
