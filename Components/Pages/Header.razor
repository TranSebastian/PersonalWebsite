@rendermode InteractiveServer
@inject NavigationManager NavManager

<h1>
    @DisplayedText
</h1>

<nav class="buttonContainer">
    <h2 class="@asa" @onclick="GoASA">ASA</h2>
    <h2 class="@cs" @onclick="GoCS">CS</h2>
    <h2 class="@home" @onclick="GoHome">About me</h2>
</nav>

@code{
    string text = "ebastian tran.";
    string DisplayedText = "";
    bool IsRunning = false;
    int CurrentIndex = 0;

    string asa = string.Empty;
    string cs = string.Empty;
    string home = string.Empty;

    private void newPage (string page)
    {
        asa = page.Equals("/asa") ? "current" : string.Empty;
        cs = page.Equals("/cs") ? "current" : string.Empty;
        home = page.Equals("/") ? "current" : string.Empty;
    }

    private async Task StartTypewriter()
    {
        if (IsRunning)
            return;

        CurrentIndex = 0;
        DisplayedText = "s";
        IsRunning = true;

        while (CurrentIndex < text.Length && IsRunning)
        {
            DisplayedText += text[CurrentIndex];
            CurrentIndex++;
            StateHasChanged();
            await Task.Delay(240); // Delay to simulate typing
        }

        IsRunning = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            newPage(new Uri(NavManager.Uri).PathAndQuery);
            await StartTypewriter();
        }
    }

    private void GoHome()
    {
        NavManager.NavigateTo("/");
        newPage("/");
    }

    private void GoASA()
    {
        NavManager.NavigateTo("/asa");
        newPage("/asa");
    }

    private void GoCS()
    {
        NavManager.NavigateTo("/cs");
        newPage("/cs");
    }
}
